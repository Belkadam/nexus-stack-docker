services:
  # Reverse Proxy (Traefik)
  traefik:
    image: traefik:v2.10
    container_name: traefik
    command:
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--entrypoints.http.address=:80"
      - "--entrypoints.qarth_local.address=:8081"
      - "--entrypoints.facturepro_local.address=:8082"
      - "--entrypoints.sf_api_local.address=:8083"
      - "--entrypoints.pwa_dashboard_local.address=:5173"
      - "--certificatesresolvers.letsencrypt.acme.email=${SSL_EMAIL}"
    ports:
      - "80:80"
      - "443:443"
      - "8081:8081"
      - "8082:8082"
      - "8083:8083"
      - "8084:5173"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik.yml:/etc/traefik/traefik.yml
      - ./acme.json:/etc/traefik/acme.json
    networks:
      - web
    restart: always

  # qarth_net
  qarth_net:
    image: nginx:latest
    container_name: qarth_net
    volumes:
      - ../qarth_net:/usr/share/nginx/html
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.qarth.rule=Host(`localhost`)"
      - "traefik.http.routers.qarth.entrypoints=qarth_local"
      - "traefik.http.routers.qarth.tls=false"
      # HTTP to HTTPS pour
      - "traefik.http.routers.qarth_http.rule=Host(`qarth.net`) || Host(`www.qarth.net`)"
      - "traefik.http.routers.qarth_http.entrypoints=http"
      - "traefik.http.routers.qarth_http.middlewares=redirect-to-https"

      # Middleware
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.permanent=true"

      # HTTPS route
      - "traefik.http.routers.qarth_https.rule=Host(`qarth.net`) || Host(`www.qarth.net`)"
      - "traefik.http.routers.qarth_https.entrypoints=https"
      - "traefik.http.routers.qarth_https.tls=true"
      - "traefik.http.routers.qarth_https.tls.certresolver=letsencrypt"

      # localhost routes
      - "traefik.http.routers.qarth_local.rule=PathPrefix(`/`)"
      - "traefik.http.routers.qarth_local.entrypoints=http"
      - "traefik.http.services.qarth.loadbalancer.server.port=80"
    networks:
      - web
    restart: always

  # facturepro_net
  facturepro_net:
    image: nginx:latest
    container_name: facturepro_net
    volumes:
      - ../facturepro_net:/usr/share/nginx/html
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.facturepro.rule=Host(`localhost`)"
      - "traefik.http.routers.facturepro.entrypoints=facturepro_local"
      - "traefik.http.routers.facturepro.tls=false"
      # HTTP to HTTPS pour
      - "traefik.http.routers.facturepro_http.rule=Host(`facturepro.net`) || Host(`www.facturepro.net`)"
      - "traefik.http.routers.facturepro_http.entrypoints=http"
      - "traefik.http.routers.facturepro_http.middlewares=redirect-to-https"

      # Middleware
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.permanent=true" # Redirection permanente (301)

      # HTTPS route
      - "traefik.http.routers.facturepro_https.rule=Host(`facturepro.net`) || Host(`www.facturepro.net`)"
      - "traefik.http.routers.facturepro_https.entrypoints=https"
      - "traefik.http.routers.facturepro_https.tls=true"
      - "traefik.http.routers.facturepro_https.tls.certresolver=letsencrypt"

      # localhost routes
      - "traefik.http.routers.facturepro_local.rule=PathPrefix(`/`)"
      - "traefik.http.routers.facturepro_local.entrypoints=http"
      - "traefik.http.services.facturepro.loadbalancer.server.port=80"
    networks:
      - web
    restart: always

  # nexus_reload_com
  nexus_reload_com:
    image: nginx:latest
    container_name: nexus_reload_com
    volumes:
      - ../nexus-reload_com:/usr/share/nginx/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf

    labels:
      - "traefik.enable=true"

      # HTTP route (redirection vers HTTPS pour nexus-reload.com)
      - "traefik.http.routers.nexus_reload_http.rule=Host(`nexus-reload.com`) || Host(`www.nexus-reload.com`)"
      - "traefik.http.routers.nexus_reload_http.entrypoints=http"
      - "traefik.http.routers.nexus_reload_http.middlewares=redirect-to-https"

      # Middleware pour redirection
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.permanent=true" # Redirection permanente (301)

      # HTTPS route
      - "traefik.http.routers.nexus_reload_https.rule=Host(`nexus-reload.com`) || Host(`www.nexus-reload.com`)"
      - "traefik.http.routers.nexus_reload_https.entrypoints=https"
      - "traefik.http.routers.nexus_reload_https.tls=true"
      - "traefik.http.routers.nexus_reload_https.tls.certresolver=letsencrypt"

      # Route localhost
      - "traefik.http.routers.nexus_reload_local.rule=PathPrefix(`/`)"
      - "traefik.http.routers.nexus_reload_local.entrypoints=http"
      - "traefik.http.services.nexus_reload.loadbalancer.server.port=80"
    networks:
      - web
    restart: always

  # n8n
  n8n:
    image: n8nio/n8n:latest
    container_name: n8n
    restart: unless-stopped
    labels:
      - "traefik.enable=true"

      # HTTP -> HTTPS redirection
      - "traefik.http.routers.n8n_http.rule=Host(`n8n.nexus-reload.com`)"
      - "traefik.http.routers.n8n_http.entrypoints=http"
      - "traefik.http.routers.n8n_http.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.permanent=true"

      # HTTPS route
      - "traefik.http.routers.n8n_https.rule=Host(`n8n.nexus-reload.com`)"
      - "traefik.http.routers.n8n_https.entrypoints=https"
      - "traefik.http.routers.n8n_https.tls=true"
      - "traefik.http.routers.n8n_https.tls.certresolver=letsencrypt"

      # Service configuration
      - "traefik.http.services.n8n.loadbalancer.server.port=5678"
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=${N8N_BASIC_AUTH_USER}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_BASIC_AUTH_PASSWORD}
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
      - N8N_PORT=443
      - N8N_PROTOCOL=https
      - N8N_URL=https://n8n.nexus-reload.com
      - N8N_TRUST_PROXY=true
      - N8N_HOST=${SUBDOMAIN}.${DOMAIN_NAME}
      - N8N_PORT=5678
      - NODE_ENV=production
      - WEBHOOK_URL=https://${SUBDOMAIN}.${DOMAIN_NAME}/
      - GENERIC_TIMEZONE=${GENERIC_TIMEZONE}

    networks:
      - web

  # SF api
  sf_api:
    build:
      context: docker/sf_api
    container_name: sf_api
    working_dir: /var/www/sf-api
    volumes:
      - ../sf-api:/var/www/sf-api
    networks:
      - web
    restart: always
    env_file:
      - .env
    labels:
      - "traefik.enable=false"

  # SF api nginx
  sf_api_nginx:
    image: nginx:latest
    container_name: sf_api_nginx
    volumes:
      - ../sf-api:/var/www/sf-api
      - ./nginx/sf_api.conf:/etc/nginx/conf.d/default.conf
    networks:
      - web
    depends_on:
      - sf_api
    restart: always
    labels:
      - "traefik.enable=true"

      # Redirection HTTP -> HTTPS
      - "traefik.http.routers.sf_api_http.rule=Host(`api.nexus-reload.com`)"
      - "traefik.http.routers.sf_api_http.entrypoints=http"
      - "traefik.http.routers.sf_api_http.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.permanent=true"

      # Route HTTPS
      - "traefik.http.routers.sf_api_https.rule=Host(`api.nexus-reload.com`)"
      - "traefik.http.routers.sf_api_https.entrypoints=https"
      - "traefik.http.routers.sf_api_https.tls=true"
      - "traefik.http.routers.sf_api_https.tls.certresolver=letsencrypt"

      # Exposer le service via Nginx
      - "traefik.http.routers.sf_api_nginx.rule=Host(`localhost`)"
      - "traefik.http.routers.sf_api_nginx.entrypoints=sf_api_local"
      - "traefik.http.services.sf_api_nginx.loadbalancer.server.port=80"

  # SF api db
  sf_api_db:
    image: mariadb:latest
    container_name: sf_api_db
    restart: unless-stopped
    ports:
      - "3306:3306"
    env_file:
      - .env
    volumes:
      - sf_api_db_data:/var/lib/mysql
    networks:
      - web

  # PWA Dashboard
  pwa_dashboard:
    build:
      context: ../pwa-dashboard
      dockerfile: ../nexus-stack-docker/docker/pwa-dashboard/Dockerfile
    container_name: pwa_dashboard
    volumes:
      - ../pwa-dashboard:/app
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pwa_dashboard.tls=false"

      # HTTP to HTTPS pour
      - "traefik.http.routers.pwa_dashboard_http.rule=Host(`qarth.net`) || Host(`www.qarth.net`)"
      - "traefik.http.routers.pwa_dashboard_http.entrypoints=http"
      - "traefik.http.routers.pwa_dashboard_http.middlewares=redirect-to-https"

      # Middleware
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.permanent=true"

      # HTTPS route
      - "traefik.http.routers.pwa_dashboard_https.rule=Host(`dashboard.nexus-reload.com`) || Host(`www.dashboard.nexus-reload.com`)"
      - "traefik.http.routers.pwa_dashboard_https.entrypoints=https"
      - "traefik.http.routers.pwa_dashboard_https.tls=true"
      - "traefik.http.routers.pwa_dashboard_https.tls.certresolver=letsencrypt"

      # localhost routes
      - "traefik.http.routers.pwa_dashboard.rule=Host(`localhost`)"
      - "traefik.http.routers.pwa_dashboard.entrypoints=pwa_dashboard_local"
      - "traefik.http.routers.pwa_dashboard_local.rule=PathPrefix(`/`)"
      - "traefik.http.routers.pwa_dashboard_local.entrypoints=http"
      - "traefik.http.services.pwa_dashboard.loadbalancer.server.port=5173"
    networks:
      - web
    restart: always
networks:
  web:
    driver: bridge

volumes:
  sf_api_db_data:
